from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from services.api_client import SpoonacularAPI
from keyboards.inline import diet_keyboard, get_recipe_keyboard
from aiogram.fsm.context import FSMContext
from states.random_recipe import RandomRecipe
from config.settings import settings  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from services.database import Database

router = Router()
api = SpoonacularAPI(api_key=settings.spoonacular_api_key)

@router.message(Command("random"))
async def random_recipe_start(message: Message, state: FSMContext):
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
    db = Database()
    await db.increment_stat('random_recipe_requests')
    
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∏–µ—Ç—ã:",
        reply_markup=diet_keyboard()
    )
    await state.set_state(RandomRecipe.choosing_diet)

@router.callback_query(RandomRecipe.choosing_diet, F.data.startswith("diet_"))
async def random_recipe_selected(callback: CallbackQuery, state: FSMContext, db: Database):
    diet = callback.data.split("_")[1]
    recipe = await api.get_random_recipe(diet if diet != "none" else "")
    
    if not recipe or "title" not in recipe:
        print(f"–û—à–∏–±–∫–∞: —Ä–µ—Ü–µ–ø—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω. –û—Ç–≤–µ—Ç API: {recipe}")
        await callback.message.answer("–û—à–∏–±–∫–∞: —Ä–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.")
        await state.clear()
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    message_text = (
        f"üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç:\n\n"
        f"üç¥ {recipe['title']}\n"
        f"üì∑ {recipe['image']}\n"
        f"üîó {recipe.get('sourceUrl', '—Å—Å—ã–ª–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    await callback.message.answer(
        message_text,
        reply_markup=get_recipe_keyboard(recipe['id']),
        disable_web_page_preview=False
    )
    await state.clear()


